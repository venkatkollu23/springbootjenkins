pipeline {
    environment {
        repostioryURL ="venkatkollu/springbootk8sdemo"
        registryCredentials ="myjenkindockerid"
        dockerImage =''
    }
    agent any

   tools {
       maven 'maven3.9.9'
   }

    stages {
        stage('Checkout') {
            steps {
                checkout changelog: false, poll: false, scm: scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/venkatkollu23/springbootjenkins.git']])
            }
        }
        stage(' Compile & Build ') {

            steps {
               sh "mvn clean install"
            }
        }
        stage(' Inspect  ') {

            environment {
                scannerHome = tool 'sonarqubescanner6';
            }
            steps {
           withSonarQubeEnv(credentialsId: 'sonarqubecredentails',installationName:'mylocalsonarqube') {
               sh 'mvn clean verify sonar:sonar -Dsonar.projectKey=spring-boot-jenkin-demo -Dsonar.host.url=http://172.24.160.1:9000/ -Dsonar.login=sqp_4f6197b3439a32f5258701e3d795aac8f24676bf'

              }
            }
        }
          stage('  Build Image') {

            steps {
             script {
                dockerImage = docker.build repostioryURL + ":$BUILD_NUMBER"
                 }
            }
        }
        stage('  Publish Image') {

            steps {
             script {
                docker.withRegistry( '', registryCredentials ) {
                dockerImage.push()
                }
             }
            }
        }
    }
}
